{"version":3,"sources":["api/consts.js","pages/AuthPage.js","pages/RegisterPage.js","reducers/user.js","components/Modal.js","components/CardContainer.js","components/BlankButton.js","lib/CustomFunctions.js","reducers/classes.js","actions/classesActions.js","components/Card.js","components/NotYet.js","pages/MainPage.js","components/Header.js","components/Footer.js","components/ProfileImage.js","components/TextArea.js","reducers/followings.js","reducers/follwers.js","components/ProfileCard.js","components/UserListButton.js","pages/ProfilePage.js","actions/followActions.js","pages/ClassPage.js","App.js","actions/userActions.js","reducers/index.js","index.js"],"names":["Auth","Classes","Container","styled","div","AuthPage","match","useState","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","nickname","setNickname","usertype","setUsertype","history","useHistory","params","isRegister","onSubmit","event","a","preventDefault","request","axios","post","response","status","data","alert","replace","error","className","placeholder","type","value","onChange","target","icon","faAngleDown","Button","token","localStorage","setItem","go","responseKaKao","res","profile","id","properties","profile_image","autoCapitalize","onClick","push","jskey","onSuccess","onFail","getProfile","style","width","height","background","borderRadius","outline","border","cursor","RegisterPage","GET_USER_OBJ","user","action","payload","ModalWrapper","props","visible","ModalOverlay","ModalInner","Modal","children","tabIndex","CardContainer","title","StyledButton","button","BlankButton","getDisplayIcon","displayIcon","faBook","faCheck","faClipboard","faPaperclip","faStickyNote","getColor","color","getUserProfile","getClass","thisClass","console","log","updateUser","updatedUser","followUser","fromId","toId","followCancel","GET_MY_CLASSES","CREATE_CLASS","classes","getMyClasses","userInfo","dispatch","userClasses","SelectContainer","add","iconcolor","ModalContainer","Card","studentName","useSelector","state","useDispatch","modalVisible","setModalVisible","addClassTitle","setAddClasstitle","addClassSubject","setAddClassSubject","addIconSelect","setAddIconSelect","addColorSelect","setAddColorSelect","teacherId","_id","teacherNickname","classTitle","subjectName","iconColor","createClass","then","required","maxLength","disabled","selected","faPlusCircle","NotYet","faSadCry","MainContainer","MainPage","useEffect","chooseUserType","map","eachClass","students","length","HeaderContainer","Header","faBars","removeItem","FooterContainer","Footer","ProfileContainer","photoURL","ProfileImage","faUserAlt","size","StyledTextArea","textarea","TextArea","GET_MY_FOLLOWINGS","followings","GET_MY_FOLLOWERS","followers","ProfileCard","userId","userNickname","userType","userPhotoURL","following","includes","UserListButton","users","setVisible","faWindowClose","follower","link","ProfilePage","setProfile","setPhotoURL","isMyProfile","setIsMyProfile","myIntroduction","setMyIntroduction","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","quitPassword","setQuitPassword","quitReason","setQuitReason","userFollowers","userFollowings","updatePhotoURL","updateIntroduction","window","confirm","selfIntroduction","updateUserType","changePassword","getItem","newpassword","deleteUser","reason","quitAt","Date","now","TestURL","htmlFor","backgroundColor","display","justifyContent","paddingTop","borderBottomLeftRadius","borderBottomRightRadius","marginBottom","accept","file","reader","FileReader","readAsDataURL","onload","result","onerror","getBase64","files","Kakao","Link","sendDefault","objectType","content","description","imageUrl","webUrl","mobileWebUrl","buttons","whiteSpace","socialLogin","boxSizing","fontSize","ClassPage","classId","setThisClass","App","getUserObj","exact","path","component","combineReducers","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f918ea70.chunk.js","sourcesContent":["export const Auth = \"https://gwaoihyeyum.herokuapp.com/auth\";\nexport const Classes = \"https://gwaoihyeyum.herokuapp.com/class\";\n\n// export const Auth = \"http://localhost:5000/auth\";\n// export const Classes = \"http://localhost:5000/class\";\n\nexport const Domain = \"https://gwaoihyeyum.herokuapp.com\";\n","import { Button } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport KaKaoLogin from \"react-kakao-login\";\nimport { Auth } from \"../api/consts\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleDown } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  .loginContainer {\n    width: 30%;\n    min-width: 370px;\n    height: 50%;\n    min-height: 500px;\n    background-color: #f5f5f5;\n    border-radius: 20px;\n    padding: 2%;\n    box-sizing: border-box;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    row-gap: 10px;\n  }\n  h1 {\n    margin-bottom: 30px;\n  }\n  form {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    row-gap: 10px;\n  }\n  form input {\n    width: 100%;\n    padding: 20px;\n    box-sizing: border-box;\n    border-radius: 15px;\n    outline: none;\n    border: none;\n  }\n  .primaryColor {\n    background-color: #2980b9;\n    color: #f5f5f5;\n  }\n  .primaryColor:hover {\n    background-color: #2980b9;\n  }\n  .buttonContainer {\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n  }\n  .buttonContainer Button {\n    height: 70px;\n    width: 49%;\n  }\n  .secondaryColor {\n    background-color: #f1c40f;\n  }\n  .KakaoButton {\n    background-image: url(../img/kakao_login.png);\n    background-position: center;\n    background-size: cover;\n  }\n  form select {\n    width: 100%;\n    padding: 20px;\n    border: none;\n    outline: none;\n    background-color: #ffffff;\n    font-family: inherit;\n    border-radius: 15px;\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    appearance: none;\n  }\n  .selectContainer {\n    display: flex;\n    width: 100%;\n    position: relative;\n  }\n  .dropDown {\n    position: absolute;\n    right: 10px;\n    top: 20px;\n  }\n`;\n\nfunction AuthPage({ match }) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [nickname, setNickname] = useState(\"\");\n  const [usertype, setUsertype] = useState(\"student\");\n  const history = useHistory();\n\n  if (match.params.isRegister === \"register\") {\n    const onSubmit = async (event) => {\n      event.preventDefault();\n      const request = { username, password, nickname, usertype };\n      const response = await axios.post(`${Auth}/register`, request);\n      const {\n        data: { status },\n      } = response;\n      if (status === \"success\") {\n        alert(\"회원가입에 성공하였습니다! 로그인 해주세요\");\n        history.replace(\"/\");\n      } else if (status === \"error\") {\n        alert(response.data.error);\n      }\n    };\n\n    return (\n      <Container>\n        <div className=\"loginContainer\">\n          <h1>과외 혜윰</h1>\n          <form onSubmit={onSubmit}>\n            <input\n              placeholder=\"아이디\"\n              type=\"text\"\n              value={username}\n              onChange={(event) => setUsername(event.target.value)}\n            />\n            <input\n              placeholder=\"비밀번호\"\n              type=\"password\"\n              value={password}\n              onChange={(event) => setPassword(event.target.value)}\n            />\n            <input\n              placeholder=\"비밀번호 확인\"\n              type=\"password\"\n              value={confirmPassword}\n              onChange={(event) => setConfirmPassword(event.target.value)}\n            />\n            {password !== confirmPassword ? <h4>비밀번호가 다릅니다</h4> : \"\"}\n            <input\n              placeholder=\"닉네임\"\n              type=\"text\"\n              value={nickname}\n              onChange={(event) => setNickname(event.target.value)}\n            />\n            <div className=\"selectContainer\">\n              <select\n                value={usertype}\n                onChange={(event) => setUsertype(event.target.value)}\n              >\n                <option value=\"student\">학생</option>\n                <option value=\"teacher\">선생님</option>\n              </select>\n              <FontAwesomeIcon className=\"dropDown\" icon={faAngleDown} />\n            </div>\n            <Button className=\"primaryColor\" type=\"submit\">\n              회원가입\n            </Button>\n          </form>\n        </div>\n      </Container>\n    );\n  } else {\n    const onSubmit = async (event) => {\n      event.preventDefault();\n      const request = { username, password };\n      const response = await axios.post(`${Auth}/login`, request);\n      const {\n        data: { status, token },\n      } = response;\n      if (status === \"success\") {\n        localStorage.setItem(\"token\", token);\n        history.go(0);\n      } else {\n        alert(response.data.error);\n      }\n    };\n    const responseKaKao = async (res) => {\n      const {\n        profile: {\n          id,\n          properties: { nickname, profile_image },\n        },\n      } = res;\n\n      const request = { id, nickname, profile_image };\n      const response = await axios.post(`${Auth}/kakaoLogin`, request);\n      const {\n        data: { status, token },\n      } = response;\n      if (status === \"success\") {\n        localStorage.setItem(\"token\", token);\n        history.go(0);\n      }\n    };\n\n    return (\n      <Container>\n        <div className=\"loginContainer\">\n          <h1>과외 혜윰</h1>\n          <form onSubmit={onSubmit}>\n            <input\n              placeholder=\"아이디\"\n              type=\"text\"\n              value={username}\n              autoCapitalize=\"off\"\n              onChange={(event) => setUsername(event.target.value)}\n            />\n            <input\n              placeholder=\"비밀번호\"\n              type=\"password\"\n              value={password}\n              onChange={(event) => setPassword(event.target.value)}\n            />\n            <Button className=\"primaryColor\" type=\"submit\">\n              로그인\n            </Button>\n          </form>\n          <div className=\"buttonContainer\">\n            <Button\n              className=\"secondaryColor\"\n              onClick={() => history.push(\"/register\")}\n            >\n              회원가입\n            </Button>\n            <KaKaoLogin\n              className=\"kakaoLogin\"\n              jskey={\"28725562855bb20f5d88ee3ce511eb3f\"}\n              onSuccess={responseKaKao}\n              onFail={() => alert(\"실패했습니다\")}\n              getProfile={true}\n              style={{\n                width: \"100%\",\n                height: \"100%\",\n                background: \"none\",\n                borderRadius: \"10px\",\n                outline: \"none\",\n                border: \"none\",\n                cursor: \"pointer\",\n              }}\n            ></KaKaoLogin>\n          </div>\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default AuthPage;\n","import { faAngleDown } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Button } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport { Auth } from \"../api/consts\";\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #34495e;\n  .loginContainer {\n    width: 30%;\n    min-width: 370px;\n    height: 50%;\n    min-height: 500px;\n    background-color: #f5f5f5;\n    border-radius: 20px;\n    padding: 2%;\n    box-sizing: border-box;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    row-gap: 10px;\n  }\n  h1 {\n    margin-bottom: 30px;\n  }\n  form {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    row-gap: 10px;\n  }\n  form input {\n    width: 100%;\n    padding: 20px;\n    box-sizing: border-box;\n    border-radius: 15px;\n    outline: none;\n    border: none;\n  }\n  .primaryColor {\n    width: 100%;\n    background-color: #2980b9;\n    color: #f5f5f5;\n  }\n  .primaryColor:hover {\n    background-color: #2980b9;\n  }\n  form select {\n    width: 100%;\n    padding: 20px;\n    border: none;\n    outline: none;\n    background-color: #ffffff;\n    font-family: inherit;\n    border-radius: 15px;\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    appearance: none;\n  }\n  .selectContainer {\n    display: flex;\n    width: 100%;\n    position: relative;\n  }\n  .dropDown {\n    position: absolute;\n    right: 10px;\n    top: 20px;\n  }\n`;\n\nfunction RegisterPage() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [nickname, setNickname] = useState(\"\");\n  const [usertype, setUsertype] = useState(\"student\");\n  const history = useHistory();\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    const request = { username, password, nickname, usertype };\n    const response = await axios.post(`${Auth}/register`, request);\n    const {\n      data: { status },\n    } = response;\n    if (status === \"success\") {\n      alert(\"회원가입에 성공하였습니다! 로그인 해주세요\");\n      history.replace(\"/\");\n    } else if (status === \"error\") {\n      alert(response.data.error);\n    }\n  };\n\n  return (\n    <Container>\n      <div className=\"loginContainer\">\n        <h1>과외 혜윰</h1>\n        <form onSubmit={onSubmit}>\n          <input\n            placeholder=\"아이디\"\n            type=\"text\"\n            value={username}\n            onChange={(event) => setUsername(event.target.value)}\n          />\n          <input\n            placeholder=\"비밀번호\"\n            type=\"password\"\n            value={password}\n            onChange={(event) => setPassword(event.target.value)}\n          />\n          <input\n            placeholder=\"비밀번호 확인\"\n            type=\"password\"\n            value={confirmPassword}\n            onChange={(event) => setConfirmPassword(event.target.value)}\n          />\n          {password !== confirmPassword ? <h4>비밀번호가 다릅니다</h4> : \"\"}\n          <input\n            placeholder=\"닉네임\"\n            type=\"text\"\n            value={nickname}\n            onChange={(event) => setNickname(event.target.value)}\n          />\n          <div className=\"selectContainer\">\n            <select\n              value={usertype}\n              onChange={(event) => setUsertype(event.target.value)}\n            >\n              <option value=\"student\">학생</option>\n              <option value=\"teacher\">선생님</option>\n            </select>\n            <FontAwesomeIcon className=\"dropDown\" icon={faAngleDown} />\n          </div>\n          <Button className=\"primaryColor\" type=\"submit\">\n            회원가입\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n}\n\nexport default RegisterPage;\n","export const GET_USER_OBJ = \"GET_USER_OBJ\";\n\nconst user = (user = {}, action) => {\n  switch (action.type) {\n    case GET_USER_OBJ:\n      return action.payload;\n    default:\n      return user;\n  }\n};\n\nexport default user;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nfunction Modal({ className, visible, children }) {\n  return (\n    <>\n      <ModalOverlay visible={visible} />\n      <ModalWrapper className={className} tabIndex=\"-1\" visible={visible}>\n        <ModalInner tabIndex=\"0\" className=\"modal-inner\">\n          {children}\n        </ModalInner>\n      </ModalWrapper>\n    </>\n  );\n}\n\nconst ModalWrapper = styled.div`\n  box-sizing: border-box;\n  display: ${(props) => (props.visible ? \"block\" : \"none\")};\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 1000;\n  overflow: auto;\n  outline: none;\n`;\n\nconst ModalOverlay = styled.div`\n  box-sizing: border-box;\n  display: ${(props) => (props.visible ? \"block\" : \"none\")};\n  position: fixed;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  background-color: rgba(0, 0, 0, 0.6);\n  z-index: 999;\n`;\n\nconst ModalInner = styled.div`\n  box-sizing: border-box;\n  position: relative;\n  box-shadow: 0 0 6px 0 rgba(0, 0, 0, 0.5);\n  background-color: #fff;\n  border-radius: 10px;\n  width: 360px;\n  max-width: 480px;\n  top: 50%;\n  transform: translateY(-50%);\n  margin: 0 auto;\n  padding: 40px 20px;\n`;\n\nexport default Modal;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: auto;\n  height: fit-content;\n  background-color: #ecf0f1;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n\n  box-sizing: border-box;\n  border-radius: 10px;\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px,\n    rgba(0, 0, 0, 0.3) 0px 30px 60px -30px;\n  h2 {\n    margin-bottom: 24px;\n  }\n  @media screen and (max-width: 1024px) {\n    width: 100%;\n    height: fit-content;\n  }\n`;\n\nfunction CardContainer({ title, children }) {\n  return (\n    <Container>\n      <h2>{title}</h2>\n      {children}\n    </Container>\n  );\n}\n\nexport default CardContainer;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nfunction BlankButton({ onClick, children, width }) {\n  return (\n    <StyledButton onClick={onClick} width={width}>\n      {children}\n    </StyledButton>\n  );\n}\n\nconst StyledButton = styled.button`\n  padding: 0;\n  margin: 0;\n  outline: none;\n  border: none;\n  width: ${(props) => (props.width ? props.width : \"100%\")};\n  font-size: 18px;\n  height: fit-content;\n  background-color: transparent;\n  :focus {\n    background-color: gray;\n  }\n`;\nexport default BlankButton;\n","import {\n  faBook,\n  faCheck,\n  faClipboard,\n  faPaperclip,\n  faStickyNote,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport axios from \"axios\";\nimport { Auth, Classes } from \"../api/consts\";\n\nexport const getDisplayIcon = (displayIcon) => {\n  switch (displayIcon) {\n    case \"book\":\n      return faBook;\n    case \"check\":\n      return faCheck;\n    case \"clipboard\":\n      return faClipboard;\n    case \"clip\":\n      return faPaperclip;\n    case \"postit\":\n      return faStickyNote;\n    default:\n      return displayIcon;\n  }\n};\n\nexport const getColor = (color) => {\n  switch (color) {\n    case \"white\":\n      return \"#f5f5f5\";\n    case \"green\":\n      return \"#2ecc71\";\n    case \"blue\":\n      return \"#4b7bec\";\n    case \"red\":\n      return \"#e74c3c\";\n    case \"purple\":\n      return \"#9b59b6\";\n    default:\n      return color;\n  }\n};\n\nexport const getUserProfile = async (id) => {\n  try {\n    const profile = await axios.post(`${Auth}/getUserProfile`, { id: id });\n    return profile;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const getClass = async (id) => {\n  try {\n    const thisClass = await axios.post(`${Classes}/getClass`, { id: id });\n    return thisClass;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const updateUser = async (updatedUser) => {\n  const response = await axios.post(`${Auth}/updateUser`, { updatedUser });\n  return response;\n};\n\nexport const followUser = async (fromId, toId) => {\n  const response = await axios.post(`${Auth}/followUser`, { fromId, toId });\n  return response;\n};\n\nexport const followCancel = async (fromId, toId) => {\n  const response = await axios.post(`${Auth}/followCancel`, { fromId, toId });\n  return response;\n};\n","export const GET_MY_CLASSES = \"GET_MY_CLASSES\";\nexport const CREATE_CLASS = \"CREATE_CLASS\";\n\nconst classes = (classes = [], action) => {\n  switch (action.type) {\n    case GET_MY_CLASSES:\n      return action.payload;\n    case CREATE_CLASS:\n      return classes;\n    default:\n      return classes;\n  }\n};\n\nexport default classes;\n","import axios from \"axios\";\nimport { Classes } from \"../api/consts\";\nimport { CREATE_CLASS, GET_MY_CLASSES } from \"../reducers/classes\";\n\nexport const getMyClasses = (userInfo) => async (dispatch) => {\n  try {\n    const response = await axios.post(`${Classes}/getClasses`, userInfo);\n    const {\n      data: { userClasses },\n    } = response;\n    dispatch({ type: GET_MY_CLASSES, payload: userClasses });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const createClass = (request) => async (dispatch) => {\n  try {\n    console.log(request);\n    const response = await axios.post(`${Classes}/create`, request);\n    console.log(response);\n    dispatch({ type: CREATE_CLASS, payload: request });\n    return 0;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import { faAngleDown, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Modal from \"../components/Modal\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Button } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport BlankButton from \"./BlankButton\";\nimport { getColor, getDisplayIcon } from \"../lib/CustomFunctions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createClass } from \"../actions/classesActions\";\nimport { useHistory } from \"react-router\";\n\nconst SelectContainer = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  outline: none;\n  border: none;\n\n  select {\n    width: 100%;\n    padding: 10px;\n    border: 1px solid gray;\n    outline: none;\n    background-color: #ffffff;\n    font-family: inherit;\n    border-radius: 15px;\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    appearance: none;\n  }\n\n  .dropDown {\n    position: absolute;\n    right: 10px;\n    top: 11px;\n  }\n`;\n\nfunction Card({ title, studentName, add, iconcolor, displayIcon }) {\n  const userInfo = useSelector((state) => state.user);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [addClassTitle, setAddClasstitle] = useState(\"\");\n  const [addClassSubject, setAddClassSubject] = useState(\"\");\n  const [addIconSelect, setAddIconSelect] = useState(\"book\");\n  const [addColorSelect, setAddColorSelect] = useState(\"black\");\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    if (userInfo.usertype === \"teacher\") {\n      const request = {\n        teacherId: userInfo._id,\n        teacherNickname: userInfo.nickname,\n        classTitle: addClassTitle,\n        subjectName: addClassSubject,\n        displayIcon: addIconSelect,\n        iconColor: addColorSelect,\n      };\n      dispatch(createClass(request)).then(() => history.go(0));\n    } else {\n      alert(\"선생님만 수업을 개설할 수 있습니다.\");\n    }\n  };\n\n  return (\n    <>\n      {add && (\n        <Modal visible={modalVisible}>\n          <ModalContainer>\n            <h2>수업 추가</h2>\n            <form onSubmit={onSubmit}>\n              <input\n                type=\"text\"\n                value={addClassTitle}\n                onChange={(event) => setAddClasstitle(event.target.value)}\n                required\n                maxLength={10}\n                placeholder=\"수업 이름\"\n              />\n              <input\n                type=\"text\"\n                value={addClassSubject}\n                maxLength={10}\n                required\n                onChange={(event) => setAddClassSubject(event.target.value)}\n                placeholder=\"과목\"\n              />\n              <SelectContainer>\n                <select\n                  value={addIconSelect}\n                  onChange={(event) => setAddIconSelect(event.target.value)}\n                  required\n                >\n                  <option value=\"\" disabled selected>\n                    :: 아이콘 선택 ::\n                  </option>\n                  <option value=\"book\">책</option>\n                  <option value=\"check\">체크</option>\n                  <option value=\"clipboard\">클립보드</option>\n                  <option value=\"clip\">클립</option>\n                  <option value=\"postit\">포스트 잇</option>\n                </select>\n                <FontAwesomeIcon className=\"dropDown\" icon={faAngleDown} />\n              </SelectContainer>\n              <SelectContainer>\n                <select\n                  value={addColorSelect}\n                  required\n                  onChange={(event) => {\n                    setAddColorSelect(event.target.value);\n                    console.log(getColor(addColorSelect));\n                  }}\n                >\n                  <option value=\"black\" selected>\n                    :: 아이콘 색 선택 ::\n                  </option>\n                  <option value=\"black\">검정색</option>\n                  <option value=\"green\">초록색</option>\n                  <option value=\"blue\">파란색</option>\n                  <option value=\"red\">빨간색</option>\n                  <option value=\"purple\">보라색</option>\n                </select>\n                <FontAwesomeIcon className=\"dropDown\" icon={faAngleDown} />\n              </SelectContainer>\n              <div className=\"previewContainer\">\n                <h4 style={{ color: \"gray\" }}>미리 보기</h4>\n                <Container iconcolor={getColor(addColorSelect)}>\n                  <FontAwesomeIcon\n                    className=\"addIcon\"\n                    iconcolor={getColor(addColorSelect)}\n                    icon={getDisplayIcon(addIconSelect)}\n                  />\n                  <span>{addClassTitle}</span>\n                  <span className=\"right\">\n                    {userInfo.nickname}\n                    {userInfo.usertype === \"teacher\" && \" 선생님\"}\n                  </span>\n                </Container>\n              </div>\n              <div className=\"buttonContainer\">\n                <Button\n                  onClick={() => {\n                    setModalVisible(false);\n                  }}\n                >\n                  취소\n                </Button>\n                <Button type=\"submit\">추가</Button>\n              </div>\n            </form>\n          </ModalContainer>\n        </Modal>\n      )}\n      <BlankButton onClick={() => setModalVisible(true)}>\n        <Container add={add} iconcolor={iconcolor}>\n          {add ? (\n            <>\n              <FontAwesomeIcon className=\"icon\" icon={faPlusCircle} />\n              <span>수업을 추가해주세요.</span>\n            </>\n          ) : (\n            <>\n              <FontAwesomeIcon\n                className=\"icon\"\n                icon={getDisplayIcon(displayIcon)}\n              />\n              <span>{title}</span>\n              <span className=\"right\">{studentName}</span>\n            </>\n          )}\n        </Container>\n      </BlankButton>\n    </>\n  );\n}\n\nconst Container = styled.div`\n  position: relative;\n  width: 100%;\n  height: 50px;\n\n  border-radius: 10px;\n  box-sizing: border-box;\n  padding: 10px;\n  display: flex;\n  align-items: center;\n  column-gap: 10px;\n  .icon {\n    color: ${(props) => (props.add ? \"gray\" : props.iconcolor)};\n  }\n  .right {\n    position: absolute;\n    right: 10px;\n    font-size: 13px;\n    color: gray;\n  }\n  span {\n    color: ${(props) => (props.add ? \"gray\" : \"black\")};\n    font-size: 14px;\n  }\n  .addIcon {\n    color: ${(props) => props.iconcolor};\n  }\n`;\n\nconst ModalContainer = styled.div`\n  form {\n    display: flex;\n    flex-direction: column;\n    row-gap: 16px;\n  }\n  display: flex;\n  flex-direction: column;\n\n  form input {\n    width: 100%;\n    padding: 10px;\n    box-sizing: border-box;\n    border-radius: 15px;\n    outline: none;\n    border: 1px solid gray;\n  }\n  form .buttonContainer {\n    display: flex;\n    justify-content: space-between;\n  }\n  .previewContainer {\n    display: flex;\n    flex-direction: column;\n  }\n  .iconSelectContainer {\n    padding-left: 20px;\n    display: grid;\n    width: 100%;\n    grid-template-columns: repeat(7, 1fr);\n  }\n  .addIcon {\n    color: ${(props) => props.iconcolor};\n  }\n`;\n\nexport default Card;\n","import { faSadCry } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100%;\n  height: fit-content;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  column-gap: 32px;\n  align-items: center;\n  color: gray;\n`;\n\nfunction NotYet({ placeholder }) {\n  return (\n    <Container>\n      <FontAwesomeIcon style={{ color: \"gray\" }} icon={faSadCry} />\n      {placeholder ? <h4>{placeholder}</h4> : <h4>준비중입니다.</h4>}\n      <FontAwesomeIcon style={{ color: \"gray\" }} icon={faSadCry} />\n    </Container>\n  );\n}\n\nexport default NotYet;\n","import { Button } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport Modal from \"../components/Modal\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleDown, faSadCry } from \"@fortawesome/free-solid-svg-icons\";\nimport axios from \"axios\";\nimport { Auth } from \"../api/consts\";\nimport CardContainer from \"../components/CardContainer\";\nimport Card from \"../components/Card\";\nimport { getMyClasses } from \"../actions/classesActions\";\nimport BlankButton from \"../components/BlankButton\";\nimport NotYet from \"../components/NotYet\";\n\nexport const SelectContainer = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  outline: none;\n  border: none;\n\n  select {\n    width: 100%;\n    padding: 20px;\n    border: 1px solid gray;\n    outline: none;\n    background-color: #ffffff;\n    font-family: inherit;\n    border-radius: 15px;\n    font-size: 15px;\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    appearance: none;\n  }\n\n  .dropDown {\n    position: absolute;\n    right: 10px;\n    top: 20px;\n  }\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 20px;\n\n  .buttonSpan {\n    display: flex;\n    justify-content: flex-end;\n  }\n`;\n\nconst MainContainer = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: center;\n  .container {\n    margin-top: 20px;\n    width: 60%;\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    column-gap: 20px;\n    row-gap: 20px;\n  }\n\n  @media screen and (max-width: 1024px) {\n    display: flex;\n    width: 100%;\n    justify-content: center;\n    .container {\n      width: 90%;\n      display: flex;\n      row-gap: 20px;\n      flex-direction: column;\n    }\n  }\n`;\n\nfunction MainPage() {\n  const history = useHistory();\n  const userInfo = useSelector((state) => state.user);\n  const classes = useSelector((state) => state.classes);\n  const dispatch = useDispatch();\n  const [modalVisible, setModalVisible] = useState(false);\n  const [usertype, setUsertype] = useState(\"student\");\n\n  useEffect(() => {\n    if (userInfo.usertype === \"notyet\") {\n      setModalVisible(true);\n    } else {\n      setModalVisible(false);\n    }\n  }, [userInfo]);\n\n  useEffect(() => {\n    dispatch(getMyClasses(userInfo));\n  }, [userInfo]);\n\n  const chooseUserType = async () => {\n    const updatedUser = { ...userInfo, usertype: usertype };\n    const response = await axios.post(`${Auth}/updateUser`, { updatedUser });\n    if (response.data.status === \"success\") {\n      history.go(0);\n    }\n  };\n\n  return (\n    <>\n      <Modal visible={modalVisible}>\n        <Container>\n          <h2>추가 정보 확인</h2>\n          <span>본인의 회원 유형을 선택해주세요.</span>\n          <SelectContainer>\n            <select\n              value={usertype}\n              onChange={(event) => setUsertype(event.target.value)}\n            >\n              <option value=\"student\">학생</option>\n              <option value=\"teacher\">선생님</option>\n            </select>\n            <FontAwesomeIcon className=\"dropDown\" icon={faAngleDown} />\n          </SelectContainer>\n          <span className=\"buttonSpan\">\n            <Button onClick={chooseUserType}>확인</Button>\n          </span>\n        </Container>\n      </Modal>\n      <MainContainer>\n        <div className=\"container\">\n          <CardContainer title=\"오늘 일정\">\n            <Card\n              displayIcon={faSadCry}\n              iconcolor=\"gray\"\n              title=\"오늘 일정이 없습니다!\"\n            />\n          </CardContainer>\n          <CardContainer title=\"내 수업\">\n            {classes &&\n              classes.map((eachClass) => (\n                <BlankButton\n                  key={eachClass._id}\n                  onClick={() => history.push(`/class/${eachClass._id}`)}\n                >\n                  <Card\n                    title={eachClass.classTitle}\n                    iconcolor={eachClass.iconColor}\n                    displayIcon={eachClass.displayIcon}\n                    studentName={\n                      eachClass.students.length > 0\n                        ? eachClass.students[0] + \" 학생\"\n                        : \"등록된 학생이 없습니다.\"\n                    }\n                  />\n                </BlankButton>\n              ))}\n            <Card add={true} />\n          </CardContainer>\n          <CardContainer title=\"내 과제\">\n            <Card\n              title=\"그래머존 56페이지\"\n              iconcolor=\"#e74c3c\"\n              studentName=\"김민수 학생\"\n              displayIcon=\"postit\"\n            />\n            <Card\n              title=\"쎈 3단원 마무리\"\n              displayIcon=\"book\"\n              iconcolor=\"#9b59b6\"\n              studentName=\"엄세정 학생\"\n            />\n            <Card\n              title=\"워드 마스터 DAY6\"\n              iconcolor=\"#9b59b6\"\n              studentName=\"엄세정 학생\"\n              displayIcon=\"clipboard\"\n            />\n            <Card\n              title=\"교과서 3과 본문 읽기\"\n              iconcolor=\"#e74c3c\"\n              studentName=\"김민수 학생\"\n              displayIcon=\"check\"\n            />\n          </CardContainer>\n          <CardContainer title=\"내 퀴즈\">\n            <NotYet />\n          </CardContainer>\n          <CardContainer title=\"내 질문\">\n            <NotYet />\n          </CardContainer>\n          <CardContainer title=\"과외 소개\">\n            <NotYet />\n          </CardContainer>\n          <CardContainer title=\"공지사항\">\n            <NotYet />\n          </CardContainer>\n          <CardContainer title=\"FAQ\">\n            <NotYet />\n          </CardContainer>\n          <CardContainer title=\"혜윰 사용 설명서\">\n            <NotYet />\n          </CardContainer>\n        </div>\n      </MainContainer>\n    </>\n  );\n}\n\nexport default MainPage;\n","import { faBars } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Button } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport BlankButton from \"./BlankButton\";\n\nconst HeaderContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #ecf0f1;\n  width: 100%;\n  .container {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: 60%;\n    height: 80px;\n  }\n  .left {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    column-gap: 16px;\n  }\n  .left #icon {\n    display: none;\n  }\n  @media screen and (max-width: 1024px) {\n    position: sticky;\n    top: 0;\n    .container {\n      width: 90%;\n      height: 64px;\n    }\n    .left #icon {\n      display: flex;\n    }\n  }\n`;\n\nfunction Header() {\n  const history = useHistory();\n  const userInfo = useSelector((state) => state.user);\n\n  return (\n    <HeaderContainer>\n      <div className=\"container\">\n        <div className=\"left\">\n          <FontAwesomeIcon id=\"icon\" icon={faBars} />\n          <BlankButton onClick={() => history.push(\"/\")}>\n            <h2>과외 혜윰</h2>\n          </BlankButton>\n        </div>\n        <div>\n          <Button onClick={() => history.push(`/profile/${userInfo._id}`)}>\n            내 프로필\n          </Button>\n          <Button\n            onClick={() => {\n              localStorage.removeItem(\"token\");\n              history.push(\"/\");\n              history.go(0);\n            }}\n          >\n            로그아웃\n          </Button>\n        </div>\n      </div>\n    </HeaderContainer>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst FooterContainer = styled.div`\n  width: 100%;\n  margin-top: 80px;\n  margin-bottom: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  color: #f5f5f5;\n`;\n\nfunction Footer() {\n  return (\n    <FooterContainer>\n      <span>과외 혜윰 :: 과외 도우미 서비스</span>\n      <span>대표 김민수 계좌 : 3333-05-4873369(카카오뱅크)</span>\n    </FooterContainer>\n  );\n}\n\nexport default Footer;\n","import { faUserAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport styled from \"styled-components\";\n\nconst ProfileContainer = styled.div`\n  width: 100px;\n  height: 100px;\n  ${(props) =>\n    props.photoURL\n      ? \"background-image: url(\" + props.photoURL + \");\"\n      : \"background-color: #bdc3c7;\"}\n  background-position: center center;\n  background-size: cover;\n  border-radius: 10px;\n`;\n\nexport function ProfileImage({ photoURL }) {\n  return (\n    <>\n      {photoURL ? (\n        <ProfileContainer photoURL={photoURL} />\n      ) : (\n        <FontAwesomeIcon icon={faUserAlt} size=\"5x\" style={{ color: \"gray\" }} />\n      )}\n    </>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledTextArea = styled.textarea`\n  width: 100%;\n  border-radius: 10px;\n  border: none;\n  outline: none;\n  resize: none;\n  height: 200px;\n  font-size: 15px;\n  padding: 15px;\n  box-sizing: border-box;\n`;\n\nfunction TextArea({ value, onChange }) {\n  return (\n    <StyledTextArea\n      value={value}\n      onChange={onChange}\n      maxLength={300}\n      placeholder=\"자기소개글을 작성해주세요!\"\n    ></StyledTextArea>\n  );\n}\n\nexport default TextArea;\n","export const GET_MY_FOLLOWINGS = \"GET_MY_FOLLOWINGS\";\n\nconst followings = (followings = [], action) => {\n  switch (action.type) {\n    case GET_MY_FOLLOWINGS:\n      return action.payload;\n    default:\n      return followings;\n  }\n};\n\nexport default followings;\n","export const GET_MY_FOLLOWERS = \"GET_MY_FOLLOWERS\";\n\nconst followers = (followers = [], action) => {\n  switch (action.type) {\n    case GET_MY_FOLLOWERS:\n      return action.payload;\n    default:\n      return followers;\n  }\n};\n\nexport default followers;\n","import { faUserAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  position: relative;\n  width: 100%;\n  height: 50px;\n  border-radius: 10px;\n  box-sizing: border-box;\n  padding: 10px;\n  display: flex;\n  align-items: center;\n  column-gap: 10px;\n  .userInfo {\n    font-size: 13px;\n  }\n  .followInfo {\n    position: absolute;\n    display: flex;\n    align-items: center;\n    right: 5px;\n    height: 100%;\n  }\n`;\n\nconst ProfileContainer = styled.div`\n  width: 30px;\n  height: 30px;\n  ${(props) =>\n    props.photoURL\n      ? \"background-image: url(\" + props.photoURL + \");\"\n      : \"background-color: #bdc3c7;\"}\n  background-position: center center;\n  background-size: cover;\n  border-radius: 10%;\n`;\n\nfunction ProfileCard({ userId, userNickname, userType, userPhotoURL }) {\n  const userInfo = useSelector((state) => state.user);\n\n  return (\n    <Container>\n      <div className=\"userPhoto\">\n        {userPhotoURL ? (\n          <ProfileContainer photoURL={userPhotoURL} />\n        ) : (\n          <FontAwesomeIcon\n            className=\"icon\"\n            style={{ width: \"30px\", height: \"30px\", color: \"gray\" }}\n            icon={faUserAlt}\n          />\n        )}\n      </div>\n      <div className=\"userInfo\">\n        {userNickname}&nbsp;\n        {userType === \"teacher\" ? \"선생님\" : \"학생\"}\n      </div>\n      <div className=\"followInfo\">\n        {userInfo.following && userInfo.following.includes(userId)\n          ? \"팔로잉\"\n          : userInfo && userInfo._id === userId\n          ? \"나\"\n          : \"팔로우\"}\n      </div>\n    </Container>\n  );\n}\n\nexport default ProfileCard;\n","import { faWindowClose } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport BlankButton from \"./BlankButton\";\nimport Modal from \"./Modal\";\nimport NotYet from \"./NotYet\";\nimport ProfileCard from \"./ProfileCard\";\n\nconst Container = styled.div`\n  span {\n    display: flex;\n    align-items: center;\n    column-gap: 8px;\n  }\n`;\n\nconst ModalContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  row-gap: 10px;\n  .top {\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    margin-bottom: 10px;\n  }\n`;\n\nfunction UserListButton({ children, users, title, type }) {\n  const [visible, setVisible] = useState(false);\n  const history = useHistory();\n\n  const onClick = (link) => {\n    history.push(`/profile/${link}`);\n    setVisible(false);\n  };\n\n  return (\n    <>\n      <Modal visible={visible}>\n        <ModalContainer>\n          <div className=\"top\">\n            <h4>{title}</h4>\n            <BlankButton width=\"fit-content\" onClick={() => setVisible(false)}>\n              <FontAwesomeIcon icon={faWindowClose} style={{ color: \"gray\" }} />\n            </BlankButton>\n          </div>\n          {users && users.length > 0 ? (\n            users.map((follower) => (\n              <BlankButton\n                key={follower._id}\n                onClick={() => onClick(follower._id)}\n              >\n                <ProfileCard\n                  userId={follower._id}\n                  userNickname={follower.nickname}\n                  userPhotoURL={follower.photoURL}\n                  userType={follower.usertype}\n                />\n              </BlankButton>\n            ))\n          ) : (\n            <NotYet\n              placeholder={\n                type === \"following\"\n                  ? \"팔로잉이 없습니다.\"\n                  : \"팔로워가 없습니다.\"\n              }\n            />\n          )}\n        </ModalContainer>\n      </Modal>\n\n      <Container>\n        <BlankButton onClick={() => setVisible(true)}>{children}</BlankButton>\n      </Container>\n    </>\n  );\n}\n\nexport default UserListButton;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  followCancel,\n  followUser,\n  getUserProfile,\n  updateUser,\n} from \"../lib/CustomFunctions\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport { ProfileImage } from \"../components/ProfileImage\";\nimport { getMyClasses } from \"../actions/classesActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport BlankButton from \"../components/BlankButton\";\nimport Card from \"../components/Card\";\nimport TextArea from \"../components/TextArea\";\nimport { Button } from \"@material-ui/core\";\nimport NotYet from \"../components/NotYet\";\nimport { SelectContainer } from \"./MainPage\";\nimport { faAngleDown } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport KaKaoLogin from \"react-kakao-login\";\nimport axios from \"axios\";\nimport { Auth, Domain } from \"../api/consts\";\nimport { getMyFollowers, getMyFollowings } from \"../actions/followActions\";\nimport UserListButton from \"../components/UserListButton\";\n\nconst ProfileContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  align-items: center;\n\n  .container {\n    margin-top: 20px;\n    width: 60%;\n    background-color: #f5f5f5;\n    box-sizing: border-box;\n    padding: 20px;\n    display: flex;\n    flex-direction: column;\n    row-gap: 32px;\n    border-radius: 10px;\n    box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px,\n      rgba(0, 0, 0, 0.3) 0px 30px 60px -30px;\n  }\n  .profileItem {\n    display: flex;\n\n    width: 100%;\n    flex-direction: column;\n  }\n  .itemBody {\n    padding: 20px;\n    display: flex;\n    flex-direction: column;\n    row-gap: 12px;\n    input {\n      width: 100%;\n      padding: 20px;\n      box-sizing: border-box;\n      border-radius: 15px;\n      font-size: 13px;\n      outline: none;\n      border: none;\n    }\n  }\n\n  .itemFooter {\n    display: flex;\n    width: 100%;\n    justify-content: flex-end;\n  }\n\n  .preview {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n  }\n\n  img {\n    width: 50px;\n  }\n\n  .previewContext {\n    margin-left: 20px;\n    margin-right: 20px;\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n    justify-content: space-between;\n    align-items: center;\n    row-gap: 5px;\n  }\n\n  .previewBody {\n    display: flex;\n    flex-direction: column;\n    row-gap: 4px;\n  }\n\n  .previewRight {\n    display: flex;\n    flex-direction: column;\n    row-gap: 10px;\n  }\n\n  .previewRight > span {\n    display: flex;\n    align-items: center;\n    column-gap: 8px;\n  }\n\n  .uploadContainer {\n    position: relative;\n    width: fit-content;\n    height: fit-content;\n  }\n\n  .uploadButton {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: flex-end;\n  }\n\n  @media screen and (max-width: 1024px) {\n    display: flex;\n    width: 100%;\n    justify-content: center;\n    .container {\n      width: 90%;\n      display: flex;\n    }\n    .itemBody {\n      margin-top: 10px;\n      padding: 5px;\n    }\n  }\n`;\n\nfunction ProfilePage({ match }) {\n  const [profile, setProfile] = useState();\n  const [photoURL, setPhotoURL] = useState(\"\");\n  const [isMyProfile, setIsMyProfile] = useState(false);\n  const [myIntroduction, setMyIntroduction] = useState(\"\");\n  const [usertype, setUsertype] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmNewPassword, setConfirmNewPassword] = useState(\"\");\n  const [quitPassword, setQuitPassword] = useState(\"\");\n  const [quitReason, setQuitReason] = useState(\"\");\n\n  const userInfo = useSelector((state) => state.user);\n  const classes = useSelector((state) => state.classes);\n  const userFollowers = useSelector((state) => state.followers);\n  const userFollowings = useSelector((state) => state.followings);\n\n  const dispatch = useDispatch();\n\n  const history = useHistory();\n  const {\n    params: { id },\n  } = match;\n\n  function getBase64(file) {\n    var reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = function () {\n      setPhotoURL(reader.result);\n    };\n    reader.onerror = function (error) {\n      console.log(\"Error: \", error);\n    };\n  }\n\n  const updatePhotoURL = async (photoURL) => {\n    const updatedUser = { ...userInfo, photoURL: photoURL };\n    const response = await updateUser(updatedUser);\n    if (response.data.status === \"success\") {\n      history.go(0);\n    }\n  };\n\n  const updateIntroduction = async () => {\n    if (window.confirm(\"자기소개글을 수정하시겠습니까?\")) {\n      if (!myIntroduction) {\n        alert(\"내용을 입력해주세요\");\n      } else {\n        const updatedUser = { ...userInfo, selfIntroduction: myIntroduction };\n        const response = await updateUser(updatedUser);\n        if (response.data.status === \"success\") {\n          history.go(0);\n        }\n      }\n    } else {\n      console.log(\"no\");\n    }\n  };\n\n  const updateUserType = async () => {\n    if (userInfo.usertype === \"teacher\" && userInfo.usertype !== usertype) {\n      if (\n        window.confirm(\n          \"회원 유형을 변경하시겠습니까?\\n교사에서 학생으로 변경 시 개설 강좌 정보가 사라집니다.\\n(강좌는 남아있으나 앞으로 교사로서 강좌를 수정할 권한은 사라집니다.)\"\n        )\n      ) {\n        const updatedUser = { ...userInfo, usertype: usertype };\n        const response = await updateUser(updatedUser);\n        if (response.data.status === \"success\") {\n          history.go(0);\n        }\n      }\n    } else {\n      if (\n        window.confirm(\n          \"회원 유형을 변경하시겠습니까?\\n학생에서 교사로 변경 시 현재 수강중인 수업에서 자동으로 탈퇴됩니다.\"\n        )\n      ) {\n        const updatedUser = { ...userInfo, usertype: usertype };\n        const response = await updateUser(updatedUser);\n        if (response.data.status === \"success\") {\n          history.go(0);\n        }\n      }\n    }\n  };\n\n  const changePassword = async () => {\n    const token = localStorage.getItem(\"token\");\n    if (newPassword === confirmNewPassword) {\n      const response = await axios.post(`${Auth}/changePassword`, {\n        token,\n        password,\n        newpassword: newPassword,\n      });\n      console.log(response);\n      if (response.data.status === \"success\") {\n        alert(\"비밀번호 변경에 성공했습니다\");\n        history.go(0);\n      } else {\n        alert(response.data.error);\n      }\n    } else {\n      alert(\"새 비밀번호를 확인해주세요\");\n    }\n  };\n\n  const deleteUser = async (id, password, reason) => {\n    if (window.confirm(\"정말로 회원 탈퇴를 하시겠습니까?\")) {\n      const quitAt = Date.now();\n      const response = await axios.post(`${Auth}/deleteUser`, {\n        id,\n        password,\n        reason,\n        quitAt,\n      });\n      if (response.data.status === \"success\") {\n        localStorage.removeItem(\"token\");\n        history.go(0);\n      }\n    }\n  };\n\n  const responseKaKao = async (res) => {\n    const {\n      profile: { id },\n    } = res;\n    if (window.confirm(\"정말로 탈퇴하시겠습니까?\")) {\n      if (id) {\n        const quitAt = Date.now();\n        const response = await axios.post(`${Auth}/deleteUser`, {\n          id: userInfo._id,\n          reason: quitReason,\n          password: \"kakao\",\n          quitAt,\n        });\n\n        const {\n          data: { status },\n        } = response;\n        if (status === \"success\") {\n          localStorage.removeItem(\"token\");\n          history.go(0);\n        }\n      }\n    }\n  };\n\n  const TestURL = `${Domain}/profile/${userInfo._id}`;\n\n  const shareProfileKakao = () => {\n    window.Kakao.Link.sendDefault({\n      objectType: \"feed\",\n      content: {\n        title: `${userInfo.nickname}의 혜윰 프로필입니다.`,\n        description: \"프로필을 확인하고 팔로우해주세요!\",\n        imageUrl: \"\",\n        link: {\n          webUrl: TestURL,\n          mobileWebUrl: TestURL,\n        },\n      },\n      buttons: [\n        {\n          title: \"혜윰으로 이동\",\n          link: {\n            webUrl: TestURL,\n            mobileWebUrl: TestURL,\n          },\n        },\n      ],\n    });\n  };\n\n  const FollowButton = () => {\n    followUser(userInfo._id, id).then((res) => {\n      if (res.data.status === \"success\") {\n        history.go(0);\n      }\n    });\n  };\n\n  const FollowCancleButton = () => {\n    if (\n      window.confirm(\n        `정말로 ${profile.nickname}님에 대한 팔로우를 취소하시겠습니까?`\n      )\n    ) {\n      followCancel(userInfo._id, id).then((res) => {\n        if (res.data.status === \"success\") {\n          alert(\"취소되었습니다.\");\n          history.go(0);\n        }\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (photoURL) {\n      updatePhotoURL(photoURL);\n    }\n  }, [photoURL]);\n\n  useEffect(() => {\n    getUserProfile(id).then((res) => {\n      if (res.data.status === \"success\") {\n        if (res.data.profile.length !== 0) {\n          setProfile(res.data.profile[0]);\n          if (userInfo) {\n            if (id === userInfo._id) {\n              setIsMyProfile(true);\n            }\n          }\n        }\n      } else {\n        alert(\"사용자를 찾을 수 없습니다.\");\n        history.go(-1);\n      }\n    });\n  }, [id]);\n\n  useEffect(() => {\n    dispatch(getMyClasses(profile));\n    if (profile) {\n      setMyIntroduction(profile.selfIntroduction);\n      setUsertype(profile.usertype);\n      dispatch(getMyFollowers(profile.follower));\n      dispatch(getMyFollowings(profile.following));\n    }\n    if (id === userInfo._id) {\n      setIsMyProfile(true);\n    } else {\n      setIsMyProfile(false);\n    }\n  }, [profile]);\n\n  useEffect(() => {\n    if (id === userInfo._id) {\n      setIsMyProfile(true);\n    } else {\n      setIsMyProfile(false);\n    }\n  }, [userInfo]);\n\n  return (\n    <ProfileContainer>\n      <div className=\"container preview\">\n        {isMyProfile ? (\n          <label htmlFor=\"profileImage\">\n            <div className=\"uploadContainer\">\n              <ProfileImage photoURL={profile && profile.photoURL} />\n              <div className=\"uploadButton\">\n                {profile && profile.photoURL ? (\n                  <div\n                    style={{\n                      backgroundColor: \"rgba(0, 0, 0, 0.4)\",\n                      display: \"flex\",\n                      justifyContent: \"center\",\n                      width: \"100%\",\n                      paddingTop: \"10px\",\n                      color: \"white\",\n                      borderBottomLeftRadius: \"10px\",\n                      borderBottomRightRadius: \"10px\",\n                    }}\n                  >\n                    <h4 style={{ marginBottom: \"10px\" }}>사진 변경</h4>\n                  </div>\n                ) : (\n                  <div\n                    style={{\n                      backgroundColor: \"rgba(0, 0, 0, 0.4)\",\n                      display: \"flex\",\n                      justifyContent: \"center\",\n                      width: \"100%\",\n                      paddingTop: \"10px\",\n                      color: \"white\",\n                      borderBottomLeftRadius: \"10px\",\n                      borderBottomRightRadius: \"10px\",\n                    }}\n                  >\n                    <h4 style={{ marginBottom: \"10px\" }}>업로드</h4>\n                  </div>\n                )}\n              </div>\n            </div>\n            <input\n              type=\"file\"\n              id=\"profileImage\"\n              accept=\"image/*\"\n              style={{ display: \"none\" }}\n              onChange={(event) => getBase64(event.target.files[0])}\n            />\n          </label>\n        ) : (\n          <ProfileImage photoURL={profile && profile.photoURL} />\n        )}\n        <div className=\"previewContext\">\n          <div className=\"previewBody\">\n            <h2>{profile && profile.nickname}</h2>\n            <h4 style={{ color: \"gray\" }}>\n              {profile && profile.usertype === \"teacher\" ? \"선생님 \" : \"학생 \"}\n            </h4>\n            {userInfo && userInfo._id === id ? (\n              <BlankButton onClick={shareProfileKakao}>\n                <h4>프로필 공유</h4>\n              </BlankButton>\n            ) : userInfo.following && userInfo.following.includes(id) ? (\n              <BlankButton onClick={FollowCancleButton}>\n                <h4>팔로잉</h4>\n              </BlankButton>\n            ) : (\n              <BlankButton onClick={FollowButton}>\n                <h4>팔로우</h4>\n              </BlankButton>\n            )}\n          </div>\n          <div className=\"previewRight\">\n            <UserListButton\n              users={userFollowers && userFollowers}\n              type=\"follower\"\n              title={`${profile && profile.nickname}님의 팔로워`}\n            >\n              <span>\n                <h4>팔로워</h4>\n                <h4>{profile && profile.follower.length}명</h4>\n              </span>\n            </UserListButton>\n            <UserListButton\n              users={userFollowings && userFollowings}\n              type=\"following\"\n              title={`${profile && profile.nickname}님의 팔로잉`}\n            >\n              <span>\n                <h4>팔로잉 </h4>\n                <h4>{profile && profile.following.length}명</h4>\n              </span>\n            </UserListButton>\n          </div>\n        </div>\n      </div>\n      <div className=\"container\">\n        <div className=\"profileItem\">\n          <h4>자기소개글</h4>\n          <div className=\"itemBody\">\n            {isMyProfile ? (\n              <TextArea\n                value={myIntroduction}\n                onChange={(event) => setMyIntroduction(event.target.value)}\n              />\n            ) : (\n              profile && (\n                <p style={{ whiteSpace: \"pre-line\" }}>\n                  {profile.selfIntroduction}\n                </p>\n              )\n            )}\n          </div>\n          <span className=\"itemFooter\">\n            {isMyProfile && (\n              <Button color=\"default\" onClick={updateIntroduction}>\n                수정\n              </Button>\n            )}\n          </span>\n        </div>\n        <div className=\"profileItem\">\n          {profile && profile.usertype === \"teacher\" ? (\n            <h4>개설 수업</h4>\n          ) : (\n            <h4>수강중인 수업</h4>\n          )}\n          <div className=\"itemBody\">\n            {classes && classes.length > 0 ? (\n              classes.map((eachClass) => (\n                <BlankButton\n                  key={eachClass._id}\n                  onClick={() => history.push(`/class/${eachClass._id}`)}\n                >\n                  <Card\n                    title={eachClass.classTitle}\n                    iconcolor={eachClass.iconColor}\n                    displayIcon={eachClass.displayIcon}\n                    studentName={\n                      eachClass.students.length > 0\n                        ? eachClass.students[0] + \" 학생\"\n                        : \"등록된 학생이 없습니다.\"\n                    }\n                  />\n                </BlankButton>\n              ))\n            ) : (\n              <NotYet\n                placeholder={\n                  profile && profile.usertype === \"teacher\"\n                    ? \"개설된 수업이 없습니다.\"\n                    : \"수강중인 수업이 없습니다.\"\n                }\n              />\n            )}\n          </div>\n          <span className=\"itemFooter\"></span>\n        </div>\n        <div className=\"profileItem\">\n          <h4>퀴즈</h4>\n          <div className=\"itemBody\">\n            <NotYet />\n          </div>\n          <span className=\"itemFooter\"></span>\n        </div>\n      </div>\n      {isMyProfile && (\n        <div className=\"container\">\n          {profile && profile.socialLogin !== \"kakao\" && (\n            <div className=\"profileItem\">\n              <h4>비밀번호 변경</h4>\n              <div className=\"itemBody\">\n                <input\n                  placeholder=\"기존 비밀번호\"\n                  type=\"password\"\n                  value={password}\n                  onChange={(event) => setPassword(event.target.value)}\n                />\n                <input\n                  placeholder=\"새 비밀번호\"\n                  type=\"password\"\n                  value={newPassword}\n                  onChange={(event) => setNewPassword(event.target.value)}\n                />\n                <input\n                  placeholder=\"새 비밀번호 확인\"\n                  type=\"password\"\n                  value={confirmNewPassword}\n                  onChange={(event) =>\n                    setConfirmNewPassword(event.target.value)\n                  }\n                />\n              </div>\n              <span className=\"itemFooter\">\n                <Button onClick={changePassword}>확인</Button>\n              </span>\n            </div>\n          )}\n          <div className=\"profileItem\">\n            <h4>회원 유형 변경</h4>\n            <div className=\"itemBody\">\n              <SelectContainer>\n                <select\n                  value={usertype}\n                  onChange={(event) => setUsertype(event.target.value)}\n                >\n                  <option value=\"student\">학생</option>\n                  <option value=\"teacher\">선생님</option>\n                </select>\n                <FontAwesomeIcon className=\"dropDown\" icon={faAngleDown} />\n              </SelectContainer>\n            </div>\n            <span className=\"itemFooter\">\n              <Button onClick={updateUserType}>확인</Button>\n            </span>\n          </div>\n          <div className=\"profileItem\">\n            <h4>멤버쉽 상태 변경</h4>\n            <div className=\"itemBody\">\n              <NotYet />\n            </div>\n            <span className=\"itemFooter\"></span>\n          </div>\n          <div className=\"profileItem\">\n            <h4>회원 탈퇴</h4>\n            {userInfo.socialLogin !== \"kakao\" ? (\n              <>\n                <div className=\"itemBody\">\n                  <input\n                    placeholder=\"비밀번호\"\n                    type=\"password\"\n                    value={quitPassword}\n                    onChange={(event) => setQuitPassword(event.target.value)}\n                  />\n                  <input\n                    placeholder=\"탈퇴 이유를 적어주세요\"\n                    value={quitReason}\n                    onChange={(event) => setQuitReason(event.target.value)}\n                  />\n                </div>\n                <span className=\"itemFooter\">\n                  <Button\n                    onClick={() =>\n                      deleteUser(userInfo._id, quitPassword, quitReason)\n                    }\n                  >\n                    회원 탈퇴\n                  </Button>\n                </span>\n              </>\n            ) : (\n              <div className=\"itemBody\">\n                <input\n                  placeholder=\"탈퇴 이유를 적어주세요\"\n                  value={quitReason}\n                  onChange={(event) => setQuitReason(event.target.value)}\n                />\n                <KaKaoLogin\n                  className=\"kakaoLogin\"\n                  jskey={\"28725562855bb20f5d88ee3ce511eb3f\"}\n                  onSuccess={responseKaKao}\n                  onFail={() => alert(\"실패했습니다\")}\n                  getProfile={true}\n                  style={{\n                    width: \"100%\",\n                    height: \"56px\",\n                    boxSizing: \"border-box\",\n                    backgroundColor: \"#FFEB00\",\n                    borderRadius: \"10px\",\n                    fontSize: \"14px\",\n                    outline: \"none\",\n                    border: \"none\",\n                    cursor: \"pointer\",\n                  }}\n                >\n                  카카오로 인증 후 회원탈퇴하기\n                </KaKaoLogin>\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </ProfileContainer>\n  );\n}\n\nexport default ProfilePage;\n","import axios from \"axios\";\nimport { Auth } from \"../api/consts\";\nimport { GET_MY_FOLLOWINGS } from \"../reducers/followings\";\nimport { GET_MY_FOLLOWERS } from \"../reducers/follwers\";\n\nexport const getMyFollowers = (followers) => async (dispatch) => {\n  try {\n    const response = await axios.post(`${Auth}/getUsers`, followers);\n    if (response.data.status === \"success\") {\n      const {\n        data: { users },\n      } = response;\n      dispatch({ type: GET_MY_FOLLOWERS, payload: users });\n    } else {\n      console.log(response);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMyFollowings = (followings) => async (dispatch) => {\n  try {\n    const response = await axios.post(`${Auth}/getUsers`, followings);\n    if (response.data.status === \"success\") {\n      const {\n        data: { users },\n      } = response;\n      dispatch({ type: GET_MY_FOLLOWINGS, payload: users });\n    } else {\n      console.log(response);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React, { useEffect, useState } from \"react\";\nimport { getClass } from \"../lib/CustomFunctions\";\n\nfunction ClassPage({ match }) {\n  const {\n    params: { classId },\n  } = match;\n\n  const [thisClass, setThisClass] = useState();\n\n  useEffect(() => {\n    getClass(classId).then((res) => setThisClass(res.data.thisClass[0]));\n  }, [classId]);\n  return <>{thisClass && thisClass.classTitle}</>;\n}\n\nexport default ClassPage;\n","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AuthPage from \"./pages/AuthPage\";\nimport RegisterPage from \"./pages/RegisterPage\";\nimport { useEffect } from \"react\";\nimport { getUserObj } from \"./actions/userActions\";\nimport MainPage from \"./pages/MainPage\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport ProfilePage from \"./pages/ProfilePage\";\nimport ClassPage from \"./pages/ClassPage\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const userInfo = useSelector((state) => state.user);\n  const token = localStorage.getItem(\"token\");\n\n  useEffect(() => {\n    dispatch(getUserObj(token));\n  }, [dispatch]);\n\n  return (\n    <Router>\n      {!userInfo ? (\n        <>\n          <Switch>\n            <Route exact path=\"/\" component={AuthPage} />\n            <Route path=\"/:isRegister\" component={AuthPage} />\n          </Switch>\n        </>\n      ) : (\n        <>\n          <Header />\n          <Switch>\n            <Route exact path=\"/\" component={MainPage} />\n            <Route path=\"/profile/:id\" component={ProfilePage} />\n            <Route path=\"/class/:classId\" component={ClassPage} />\n          </Switch>\n        </>\n      )}\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","import axios from \"axios\";\nimport { Auth } from \"../api/consts\";\nimport { GET_USER_OBJ } from \"../reducers/user\";\n\nexport const getUserObj = (token) => async (dispatch) => {\n  try {\n    const response = await axios.post(`${Auth}/getUserObj`, { token });\n    const {\n      data: { user },\n    } = response;\n\n    dispatch({ type: GET_USER_OBJ, payload: user });\n  } catch (error) {\n    dispatch({ type: GET_USER_OBJ, payload: false });\n  }\n};\n","import { combineReducers } from \"redux\";\n\nimport user from \"./user\";\nimport classes from \"./classes\";\nimport followers from \"./follwers\";\nimport followings from \"./followings\";\n\nexport default combineReducers({ user, classes, followers, followings });\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport \"./index.css\";\n\nimport reducers from \"./reducers/index\";\n\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}